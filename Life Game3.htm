<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0033)http://skinshop.tk/lifegame/v2.3/ -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		
		<title>Life Game</title>
		<script type="text/javascript" src="./Life Game3_files/vector2d.js"></script>
		<script type="text/javascript" src="./Life Game3_files/lifegame.js"></script>
		<script type="text/javascript" src="./Life Game3_files/map.js"></script>
		<script type="text/javascript" src="./Life Game3_files/cell.js"></script>
		<script type="text/javascript" src="./Life Game3_files/color.js"></script>
		<!-- <script type="text/javascript" src="js/stats.min.js"></script> -->

		<style>
			* {
				margin: 0;
				padding: 0;
				position: relative;
			}
			fieldset {
				padding: 10px;
				margin-bottom: 10px;
			}
			#canvas {
				position: relative;
				float: left;
				overflow: hidden;
			}
			#lifegame {
				cursor: default;
			}
			#mouse_info_fieldset {
				width: 100px;
				position: absolute;
				bottom: 0px;
				left: 0px;
				font-size: 12px;
				font-family: arial, sans-serif;
				padding: 3px;
				margin: 0px;
				background-color: rgba(0, 0, 0, 0.5);
				color: #fff;
				border: 2px solid #000;
			}
			#mouse_info_fieldset label {
				display: block;
				overflow: hidden;
			}
			#mouse_info_fieldset #fps {
				background: transparent;
				border: none;
				float: right;
				display: inline;
				width: 50px;
				text-align: right;
				color: yellow;
			}
			#mouse_info_fieldset label span {
				float: right;
			}
			#tool_box {
				float: left;
				width: 50%;
				border: 10px solid transparent;
				box-sizing: border-box;
			}
			#tool_box label {
				display: block;
				margin-bottom: 5px;
			}
			#tool_box button {
				width: 100px;
				height: 50px;
				margin-bottom: 10px;
			}
			#world_status {
				color: red;
			}
			#tool_box #create_world {
				height: 81px;
				float: right;
				position: absolute;
				top: 18px;
				right: 10px;
			}

		</style>
	</head>
	<body>
		<div id="canvas">
			<canvas id="lifegame" width="705" height="705"></canvas>
			<fieldset id="mouse_info_fieldset" style="left: 0px;">
				<label>x <span id="x">690/353</span> </label>
				<label>y <span id="y">232/353</span> </label>
				<label>Line <span id="lb">98</span> </label>
				<label>Colunm <span id="cb">33</span> </label>
				<label>Fps
					<input id="fps" disabled="disabled" value="0">
				</label>
				<label>Scale <span id="scale">1</span> </label>

			</fieldset>
		</div>
		<div id="tool_box">
			<fieldset id="world_info">
				<legend>
					World Info: <span id="world_status">Stop </span>
				</legend>
				<label>LivingCells:
					<input id="living_cells" disabled="disabled">
				</label>
			</fieldset>
			<fieldset>
				<legend>
					Console
				</legend>
				<fieldset>
					<legend>
						Create World
					</legend>
					<label> Lines：
						<input id="lines" type="number" min="1" value="40">
					</label>
					<label> Columns：
						<input id="columns" type="number" min="1" value="40">
					</label>
					<label> Living Cells：
						<input id="need_cells" type="number" min="1" value="80">
					</label>
					<button id="create_world">
						Create
					</button>
				</fieldset>

				<button id="clear_world">
					Clear World
				</button>
				<button id="startTaggle">
					Start
				</button>
				<button id="one_step">
					One Step
				</button>
				<button id="enlarge">
					Enlarge
				</button>
				<button id="narrow">
					Narrow
				</button>
				<button id="reduce">
					Reduce
				</button>
				<button id="quick">
					Quick
				</button>
			</fieldset>

		</div>

		<script type="text/javascript">
			function $(e) {
				return document.getElementById(e);
			}

			function addEvent(obj, type, fun) {
				obj = $(obj);
				if (obj.addEventListener) {
					obj.addEventListener(type, fun, false);
					return true;
				} else if (obj.attachEvent) {
					return obj.attachEvent("on" + type, fun);
				} else {
					return false;
				}
			};
			window.onload = function() {
				lifegame = new LifeGame('lifegame', 100, 100, 1000);
				$("mouse_info_fieldset").style["left"] = "0px";
				column = line = 0;
				downX = downY = 0;
				//鼠标左键摁下时的位置
				centerX = centerY = 0;
				//鼠标左键放开时的位置，上次总偏移量
				deltaX = deltaY = 0;
				//鼠标拖动时的偏移量
				mouseDown = false;
				mouseMove = false;
				mouseNoMove = true;
				cellStatusHasChange = false;
				/*	{mousePos.x,mousePos.y}	鼠标在渲染区域内的绝对原点位置
				 * 	{canvas.width/2-mousePos.x,canvas.height/2-mousePos.y}	鼠标在渲染区域内的绝对中点位置
				 *  	{mousePos.x - lifegame.map.translateX ,mousePos.y - lifegame.map.translateY}	鼠标在map上离原点的绝对位置
				 * 	{mousePos.x - lifegame.map.translateX - lifegame.map.mapCenterX,mousePos.y - lifegame.map.translateY - lifegame.map.mapCenterY}	鼠标在map上离中点的绝对位置
				 * 	{this.mapCenterX,this.mapCenterY}	map的中心坐标
				 * 	{mousePos.x-lifegame.map.mapCenterX,mousePos.y-lifegame.map.mapCenterY}	鼠标离渲染区中心点的绝对位置
				 */

				addEvent("lifegame", "mousemove", function(e) {
					e = e || window.event;
					mousePos = mousePosition(e);
					if (column != Math.ceil(Math.abs(mousePos.x - lifegame.map.translateX) / game.map.cellWidth) - 1 || line != Math.ceil(Math.abs(mousePos.y - lifegame.map.translateY) / game.map.cellHeight) - 1)
						cellStatusHasChange = false;
					line = Math.ceil((mousePos.y - lifegame.map.translateY  ) / lifegame.map.cellHeight) - 1;
					column = Math.ceil((mousePos.x - lifegame.map.translateX ) / lifegame.map.cellWidth) - 1;
					$('x').innerHTML = (mousePos.x - lifegame.map.translateOriginX).toFixed(0) + "/" + (lifegame.map.mapWidth / 2 - lifegame.map.translateX).toFixed(0);
					$('y').innerHTML = (mousePos.y - lifegame.map.translateOriginY).toFixed(0) + "/" + (lifegame.map.mapHeight / 2 - lifegame.map.translateY ).toFixed(0);
					$('lb').innerHTML = column + 1;
					$('cb').innerHTML = line + 1;
					if (mouseDown && !cellStatusHasChange && e.button == 0) {
						if ((line >= 0 && line < lifegame.map.lines) && (column >= 0 && column < lifegame.map.columns)) {
							lifegame.changeCellStatus(lifegame.map.mapArray[line][column]);
							cellStatusHasChange = true;
						}
					}
					if (mouseDown && e.button == 2) {//右键拖拽时
						lifegame.map.translateX = lifegame.map.translateOriginX + mousePos.x - downX;
						lifegame.map.translateY = lifegame.map.translateOriginY + mousePos.y - downY;
						deltaX = mousePos.x - downX;
						deltaY = mousePos.y - downY;
						lifegame.map.render();
					}
					// mouseMove = true;
					// mouseNoMove = false;
				})
				addEvent("lifegame", "mousedown", function(e) {
					e = e || window.event;
					mouseDown = true;
					if (e.button == 2) {
						downX = e.clientX;
						downY = e.clientY;
					}
					if (mouseDown && !cellStatusHasChange && e.button == 0) {
						if ((line >= 0 && line < lifegame.map.lines) && (column >= 0 && column < lifegame.map.columns)) {
							lifegame.changeCellStatus(lifegame.map.mapArray[line][column]);
						}
					}
					cellStatusHasChange = true;
				})
				addEvent("lifegame", "mouseup", function() {
					mouseDown = false;
					cellStatusHasChange = false;
					lifegame.map.translateOriginX = lifegame.map.translateX;
					lifegame.map.translateOriginY = lifegame.map.translateY;
				})
				addEvent("enlarge", "click", function() {
					lifegame.map.scaleMap(1);
				});
				addEvent("narrow", "click", function() {
					lifegame.map.scaleMap(-1);
				});
				addEvent("create_world", "click", function() {
					lifegame.createMap(lifegame.map.canvasId, $("lines").value, $("columns").value, $("need_cells").value);
					// lifegame.startGame();
				})
				addEvent("clear_world", "click", function() {
					lifegame.clearMap();
				})
				addEvent("reduce", "click", function() {
					lifegame.map.reduce();
				})
				addEvent("quick", "click", function() {
					lifegame.map.quick();
				})
				addEvent("startTaggle", "click", function() {
					if (!lifegame.map.loop) {
						lifegame.startGame();
					} else {
						lifegame.stop();
					}
				})
				addEvent("one_step", "click", function() {
					// if (lifegame.intervalNumber != -1)
					lifegame.map.draw();
					lifegame.stop();
					// lifegame.map.render();
				})
				addEvent("mouse_info_fieldset", "mouseover", function() {
					if (this.style["left"] == "0px") {
						this.style["left"] = "auto";
						this.style["right"] = "0px";
					} else if (this.style["right"] == "0px") {
						this.style["right"] = "auto";
						this.style["left"] = "0px";
					}
				})
				window.setInterval(setFps, 1000);
				function setFps() {
					$("fps").value = lifegame.map.fps;
					lifegame.map.fps = 0;
				}

			}
			function mousePosition(ev) {
				if (ev.pageX || ev.pageY) {
					return {
						x : ev.pageX,
						y : ev.pageY
					};
				}
				return {
					x : ev.clientX + document.body.scrollLeft - document.body.clientLeft,
					y : ev.clientY + document.body.scrollTop - document.body.clientTop
				};
			}


			window.document.oncontextmenu = function() {
				return false;
			}//禁止鼠标右键
			document.onselectstart = new Function('event.returnValue=false;');
			//禁止鼠标选择
		</script>
	

</body></html>